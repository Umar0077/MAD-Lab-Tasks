Task:2
import React, { useState } from "react";
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  FlatList,
  StyleSheet,
  Alert,
} from "react-native";

export default function StudentRecords() {
  const [name, setName] = useState("");
  const [gpa, setGpa] = useState("");
  const [records, setRecords] = useState([]);
  const [filteredRecords, setFilteredRecords] = useState(null);

  const handleAdd = () => {
    if (!name.trim() || !gpa.trim()) {
      Alert.alert("Error", "Please enter both Name and GPA.");
      return;
    }
    const newRecord = { id: Date.now().toString(), name, gpa };
    setRecords((prev) => [...prev, newRecord]);
    setFilteredRecords(null);
    setName("");
    setGpa("");
  };

  const handleSearch = () => {
    const filtered = records.filter((rec) =>
      rec.name.toLowerCase().includes(name.toLowerCase().trim())
    );
    setFilteredRecords(filtered);
  };

  const handleDelete = (id) => {
    const updated = records.filter((rec) => rec.id !== id);
    setRecords(updated);
    setFilteredRecords(null);
  };

  const handleClearAll = () => {
    setRecords([]);
    setFilteredRecords(null);
  };

  const dataToShow = filteredRecords !== null ? filteredRecords : records;

  return (
    <View style={styles.container}>
      <Text style={styles.label}>Name:</Text>
      <TextInput
        style={styles.input}
        placeholder="Enter Name"
        value={name}
        onChangeText={setName}
      />

      <Text style={styles.label}>GPA:</Text>
      <TextInput
        style={styles.input}
        placeholder="Enter GPA"
        value={gpa}
        onChangeText={setGpa}
        keyboardType="numeric"
      />

      <View style={styles.buttonRow}>
        <TouchableOpacity style={styles.button} onPress={handleAdd}>
          <Text style={styles.buttonText}>Add</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleSearch}>
          <Text style={styles.buttonText}>Search</Text>
        </TouchableOpacity>
      </View>

      <FlatList
        style={styles.list}
        data={dataToShow}
        keyExtractor={(item) => item.id}
        ListEmptyComponent={
          <Text style={{ textAlign: "center", marginTop: 10 }}>
            No records found
          </Text>
        }
        renderItem={({ item, index }) => (
          <View style={styles.recordItem}>
            <Text style={styles.recordText}>
              {index + 1}. {item.name} â€” {item.gpa}
            </Text>
            <TouchableOpacity
              style={styles.deleteBtn}
              onPress={() => handleDelete(item.id)}
            >
              <Text style={{ color: "white", fontWeight: "bold" }}>X</Text>
            </TouchableOpacity>
          </View>
        )}
      />

      <TouchableOpacity style={styles.clearAllBtn} onPress={handleClearAll}>
        <Text style={styles.clearAllText}>Clear All</Text>
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    padding: 20,
    flex: 1,
  },
  label: {
    fontWeight: "bold",
    marginTop: 10,
  },
  input: {
    borderWidth: 1,
    borderColor: "#999",
    borderRadius: 4,
    padding: 8,
    marginTop: 5,
  },
  buttonRow: {
    flexDirection: "row",
    marginTop: 15,
    justifyContent: "space-between",
  },
  button: {
    backgroundColor: "#007B00",
    paddingVertical: 10,
    paddingHorizontal: 25,
    borderRadius: 5,
  },
  buttonText: {
    color: "white",
    fontWeight: "600",
  },
  list: {
    marginTop: 20,
    flex: 1,
  },
  recordItem: {
    backgroundColor: "#007B00",
    flexDirection: "row",
    justifyContent: "space-between",
    paddingVertical: 10,
    paddingHorizontal: 15,
    borderRadius: 20,
    marginVertical: 5,
  },
  recordText: {
    color: "white",
    fontSize: 16,
  },
  deleteBtn: {
    backgroundColor: "red",
    borderRadius: 15,
    width: 25,
    height: 25,
    justifyContent: "center",
    alignItems: "center",
  },
  clearAllBtn: {
    backgroundColor: "#ccc",
    paddingVertical: 10,
    borderRadius: 5,
    marginTop: 10,
  },
  clearAllText: {
    textAlign: "center",
    fontWeight: "600",
    color: "#333",
  },
});
